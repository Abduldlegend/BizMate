// // frontend/src/utils/exportInvoicePdf.js
// export async function generateInvoicePDF(invoice = {}, options = {}) {
//   // dynamic import to avoid build-time bundling issues
//   const { jsPDF } = await import("jspdf");
//   const autoTable = (await import("jspdf-autotable")).default || (m => m);

//   const {
//     company = {
//       name: "BizMate",
//       motto: "Your business companion",
//       phone: "",
//       email: ""
//     },
//     bank = {
//       accountNumber: "0000000000",
//       accountName: "BizMate",
//       bankName: "Your Bank"
//     },
//     footerMessage = "Thank you for doing business with us.",
//     watermarkText = "Generated by BizMate"
//   } = options;

//   const doc = new jsPDF({ unit: "pt", format: "a4" });
//   const left = 40;
//   const pageWidth = doc.internal.pageSize.getWidth();
//   let y = 40;

//   // Header - Company name
//   doc.setFontSize(18);
//   doc.setTextColor("#4285F4"); // Google Blue
//   doc.setFont("helvetica", "bold");
//   doc.text(String(company.name || ""), left, y);

//   // Motto
//   doc.setFontSize(11);
//   doc.setTextColor("#34A853");
//   doc.setFont("helvetica", "normal");
//   doc.text(String(company.motto || ""), left, y + 18);

//   // Contact on right
//   doc.setFontSize(10);
//   doc.setTextColor("#000");
//   if (company.phone) doc.text(`Phone: ${company.phone}`, pageWidth - left - 200, y);
//   if (company.email) doc.text(`Email: ${company.email}`, pageWidth - left - 200, y + 12);

//   // Invoice title and number
//   doc.setFontSize(24);
//   doc.setFont("helvetica", "bold");
//   doc.setTextColor("#000");
//   doc.text("INVOICE", pageWidth - left - 120, y + 50);

//   doc.setFontSize(11);
//   doc.setFont("helvetica", "normal");
//   doc.text(`Invoice ID: ${invoice.invoiceNumber || ""}`, pageWidth - left - 120, y + 70);

//   y += 100;

//   // Customer details
//   doc.setFontSize(11);
//   doc.setFont("helvetica", "bold");
//   doc.text("Bill To:", left, y);
//   doc.setFont("helvetica", "normal");
//   const cust = invoice.customer || {};
//   doc.text(`${cust.name || "-"}`, left, y + 16);
//   if (cust.email) doc.text(`${cust.email}`, left, y + 32);
//   if (cust.phone) doc.text(`${cust.phone}`, left, y + 48);
//   if (cust.address) doc.text(`${cust.address}`, left, y + 64);

//   // Table - items
//   const tableY = y + 90;
//   const body = (invoice.items || []).map((it, idx) => ([
//     String(idx + 1),
//     it.name || "",
//     it.quantity != null ? String(it.quantity) : "",
//     it.price != null ? String(Number(it.price).toFixed(2)) : "",
//     it.total != null ? String(Number(it.total).toFixed(2)) : ""
//   ]));

//   autoTable(doc, {
//     startY: tableY,
//     head: [["#", "Description", "Qty", "Rate", "Amount"]],
//     body,
//     styles: { fontSize: 10 },
//     headStyles: { fillColor: [66, 133, 244], textColor: "#fff" },
//     columnStyles: {
//       0: { cellWidth: 24 },
//       1: { cellWidth: 260 },
//       2: { cellWidth: 40 },
//       3: { cellWidth: 60 },
//       4: { cellWidth: 80 }
//     },
//     margin: { left },
//   });

//   const finalY = doc.lastAutoTable ? doc.lastAutoTable.finalY : tableY + 20;
//   let totalsY = finalY + 20;

//   // Totals box at right
//   const rightX = pageWidth - left - 200;
//   doc.setFontSize(11);
//   doc.text(`Subtotal: ₦${(invoice.subtotal || 0).toFixed(2)}`, rightX, totalsY);
//   doc.text(`Tax: ₦${(invoice.tax || 0).toFixed(2)}`, rightX, totalsY + 16);
//   doc.text(`Discount: ₦${(invoice.discount || 0).toFixed(2)}`, rightX, totalsY + 32);
//   doc.setFont("helvetica", "bold");
//   doc.setFontSize(13);
//   doc.text(`Grand Total: ₦${(invoice.totalAmount || 0).toFixed(2)}`, rightX, totalsY + 56);

//   // Bank details & appreciation
//   const bankY = totalsY + 100;
//   doc.setFont("helvetica", "normal");
//   doc.setFontSize(10);
//   doc.text("Bank Details:", left, bankY);
//   doc.text(`Account: ${bank.accountNumber}`, left, bankY + 16);
//   doc.text(`Account Name: ${bank.accountName}`, left, bankY + 32);
//   doc.text(`Bank: ${bank.bankName}`, left, bankY + 48);

//   doc.setFontSize(11);
//   doc.text(footerMessage, left, bankY + 80);

//   // Footer watermark
//   doc.setFontSize(9);
//   doc.setTextColor("#999999");
//   doc.text(watermarkText, left, doc.internal.pageSize.getHeight() - 20);

//   // Light tiled watermark pattern (small, faint text across page)
//   const wmText = company.name || "BizMate";
//   doc.setFontSize(8);
//   doc.setTextColor(150,150,150);
//   const w = doc.internal.pageSize.getWidth();
//   const h = doc.internal.pageSize.getHeight();
//   for (let i = 0; i < 12; i++) {
//     for (let j = 0; j < 8; j++) {
//       const x = 30 + i * 120;
//       const yy = 60 + j * 100;
//       doc.text("BizMate", x, yy, { angle: -30, align: "left" });
//       // doc.textWithRotation(wmText, x, yy, { angle: -30, align: "left" });
//     }
//   }

//   // Save file
//   const filename = `${invoice.invoiceNumber || "invoice"}.pdf`;
//   doc.save(filename);
// }




// frontend/src/utils/exportInvoicePdf.js
import jsPDF from "jspdf";
import autoTable from "jspdf-autotable";

export function generateInvoicePDF(invoice) {
  const doc = new jsPDF();

  // ========= HEADER =========
  doc.setFontSize(18);
  doc.setFont("helvetica", "bold");
  doc.text(invoice.companyName || "Your Company", 14, 20);

  doc.setFontSize(11);
  doc.setFont("helvetica", "italic");
  doc.text(invoice.motto || "Business Motto Here", 14, 28);

  doc.setFontSize(10);
  doc.setFont("helvetica", "normal");
  if (invoice.phone) doc.text(`Phone: ${invoice.phone}`, 14, 36);
  if (invoice.email) doc.text(`Email: ${invoice.email}`, 14, 42);

  doc.setFontSize(20);
  doc.setFont("helvetica", "bold");
  doc.setTextColor(40, 40, 120);
  doc.text("INVOICE", 180, 20, { align: "right" });

  doc.setFontSize(11);
  doc.setTextColor(0, 0, 0);
  doc.text(`Invoice ID: ${invoice.invoiceNumber}`, 180, 28, { align: "right" });
  doc.text(`Date: ${new Date(invoice.createdAt).toLocaleDateString()}`, 180, 36, { align: "right" });

  // ========= CUSTOMER DETAILS =========
  doc.setFontSize(12);
  doc.setFont("helvetica", "bold");
  doc.text("Bill To:", 14, 55);
  doc.setFont("helvetica", "normal");
  doc.setFontSize(11);
  if (invoice.customer?.name) doc.text(invoice.customer.name, 14, 62);
  if (invoice.customer?.phone) doc.text(`Phone: ${invoice.customer.phone}`, 14, 68);
  if (invoice.customer?.email) doc.text(`Email: ${invoice.customer.email}`, 14, 74);
  if (invoice.customer?.address) doc.text(`Address: ${invoice.customer.address}`, 14, 80);

  // ========= TABLE =========
  autoTable(doc, {
    startY: 90,
    head: [["Item", "Description", "Qty", "Rate", "Amount"]],
    body: invoice.items.map((item) => [
      item.name,
      item.description || "",
      item.quantity,
      item.price.toFixed(2),
      (item.total || item.quantity * item.price).toFixed(2),
    ]),
    styles: { fontSize: 9 },
    columnStyles: {
      0: { cellWidth: 30 }, // Item
      1: { cellWidth: 60 }, // Description
      2: { cellWidth: 20, halign: "center" }, // Qty
      3: { cellWidth: 30, halign: "right" }, // Rate
      4: { cellWidth: 30, halign: "right" }, // Amount
    },
  });

  let finalY = doc.lastAutoTable.finalY || 100;

  // ========= TOTALS =========
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("Subtotal:", 150, finalY + 10, { align: "right" });
  doc.text(invoice.subtotal.toFixed(2), 200, finalY + 10, { align: "right" });

  doc.text("Tax:", 150, finalY + 16, { align: "right" });
  doc.text(invoice.tax.toFixed(2), 200, finalY + 16, { align: "right" });

  doc.text("Discount:", 150, finalY + 22, { align: "right" });
  doc.text(invoice.discount.toFixed(2), 200, finalY + 22, { align: "right" });

  doc.setFontSize(12);
  doc.text("Total:", 150, finalY + 30, { align: "right" });
  doc.text(invoice.totalAmount.toFixed(2), 200, finalY + 30, { align: "right" });

  // ========= BANK DETAILS =========
  let bankY = finalY + 45;
  doc.setFontSize(11);
  doc.setFont("helvetica", "bold");
  doc.text("Payment Details:", 14, bankY);

  doc.setFont("helvetica", "normal");
  doc.text(`Account Name: ${invoice.bank?.accountName || ""}`, 14, bankY + 8);
  doc.text(`Account Number: ${invoice.bank?.accountNumber || ""}`, 14, bankY + 16);
  doc.text(`Bank: ${invoice.bank?.bankName || ""}`, 14, bankY + 24);

  // ========= APPRECIATION =========
  doc.setFontSize(11);
  doc.setFont("helvetica", "italic");
  doc.text("Thank you for doing business with us.", 14, bankY + 40);

  // ========= WATERMARK =========
  doc.setFontSize(35);
  doc.setTextColor(220, 220, 220);

  for (let x = 30; x < 210; x += 60) {
    for (let y = 50; y < 297; y += 60) {
      doc.text("BizMate", x, y, { angle: 45, align: "center" });
    }
  }

  // ========= FOOTER WATERMARK =========
  doc.setFontSize(9);
  doc.setTextColor(150, 150, 150);
  doc.text("Generated by BizMate", 105, 290, { align: "center" });

  // ========= SAVE =========
  doc.save(`Invoice_${invoice.invoiceNumber}.pdf`);
}
